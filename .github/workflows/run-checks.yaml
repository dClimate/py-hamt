name: Run checks
run-name: Triggered on push from ${{ github.actor }} to branch/tag ${{ github.ref_name }}
on: push
# Should be the same as py-hamt/run-checks.sh

jobs:
  run_checks:
    name: Create project environment, run all checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Create project environment
        run: uv sync

      - name: Install IPFS
        uses: ibnesayeed/setup-ipfs@master
        with:
          ipfs_version: "0.32.1"
          run_daemon: true
        id: ipfs_setup

      - name: Configure IPFS with multiple authentication methods
        run: |
          # Set CORS headers
          ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["*"]'
          ipfs config --json Gateway.HTTPHeaders.Access-Control-Allow-Origin '["*"]'

          # Configure authentication methods with test credentials
          ipfs config --json Gateway.HTTPHeaders.Authorization "{\"Bearer\": \"test\"}"
          ipfs config --json Gateway.HTTPHeaders.X-API-Key "\"test\""

          # Basic auth with test:test
          echo "test:test" > ~/.ipfs/credentials
          BASIC_AUTH_BASE64=$(base64 ~/.ipfs/credentials | tr -d '\n')
          ipfs config --json Gateway.HTTPHeaders.Basic-Auth "{\"Authorization\": \"Basic $BASIC_AUTH_BASE64\"}"


      - name: Run pytest with coverage
        run: uv run pytest --cov=py_hamt tests/ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Check coverage
        run: uv run coverage report --fail-under=100 --show-missing

      - name: Check linting with ruff
        run: uv run ruff check

      - name: Check formatting with ruff
        run: uv run ruff format --check
